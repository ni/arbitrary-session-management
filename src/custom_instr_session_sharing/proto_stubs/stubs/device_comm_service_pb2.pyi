"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file

This file is where the request and response messages for the
Device Communication service are defined. It includes the service definition, request and response
messages, and enumerations for session initialization behavior.

The Device Communication service provides methods to open a handle of a session.

The user can create a similar file for their services by following the structure of this file.
It is recommended to have Initialize or similar rpc call 
establishing or creating or opening the connection objects and 
Close or similar rpc calls for closing or destroying the connection objects.

We use Initialize and Close as examples here.
It is highly recommended to use the same Session Initialization Behavior ENUM.
This ensures that the sessions are shareable across different measurement plugins.
"""

import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _Protocol:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _ProtocolEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Protocol.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    UNKNOWN_PROTOCOL: _Protocol.ValueType  # 0
    SPI: _Protocol.ValueType  # 1
    I2C: _Protocol.ValueType  # 2
    UART: _Protocol.ValueType  # 3

class Protocol(_Protocol, metaclass=_ProtocolEnumTypeWrapper):
    """Protocol enumeration for device communication"""

UNKNOWN_PROTOCOL: Protocol.ValueType  # 0
SPI: Protocol.ValueType  # 1
I2C: Protocol.ValueType  # 2
UART: Protocol.ValueType  # 3
global___Protocol = Protocol

class _SessionInitializationBehavior:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _SessionInitializationBehaviorEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_SessionInitializationBehavior.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    SESSION_INITIALIZATION_BEHAVIOR_UNSPECIFIED: _SessionInitializationBehavior.ValueType  # 0
    """Automatically decide whether to initialize new or attach."""
    SESSION_INITIALIZATION_BEHAVIOR_INITIALIZE_NEW: _SessionInitializationBehavior.ValueType  # 1
    SESSION_INITIALIZATION_BEHAVIOR_ATTACH_TO_EXISTING: _SessionInitializationBehavior.ValueType  # 2

class SessionInitializationBehavior(_SessionInitializationBehavior, metaclass=_SessionInitializationBehaviorEnumTypeWrapper): ...

SESSION_INITIALIZATION_BEHAVIOR_UNSPECIFIED: SessionInitializationBehavior.ValueType  # 0
"""Automatically decide whether to initialize new or attach."""
SESSION_INITIALIZATION_BEHAVIOR_INITIALIZE_NEW: SessionInitializationBehavior.ValueType  # 1
SESSION_INITIALIZATION_BEHAVIOR_ATTACH_TO_EXISTING: SessionInitializationBehavior.ValueType  # 2
global___SessionInitializationBehavior = SessionInitializationBehavior

@typing.final
class InitializeRequest(google.protobuf.message.Message):
    """Request/Response messages"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    INSTRUMENT_RESOURCE_NAME_FIELD_NUMBER: builtins.int
    PROTOCOL_FIELD_NUMBER: builtins.int
    RESET_FIELD_NUMBER: builtins.int
    REGISTER_MAP_PATH_FIELD_NUMBER: builtins.int
    INITIALIZATION_BEHAVIOR_FIELD_NUMBER: builtins.int
    instrument_resource_name: builtins.str
    """Resource name of the custom instrument."""
    protocol: global___Protocol.ValueType
    """Defines which protocol is used for device wake up."""
    reset: builtins.bool
    """Reset option to re-load the register map data"""
    register_map_path: builtins.str
    """The complete register map file path"""
    initialization_behavior: global___SessionInitializationBehavior.ValueType
    """Defines how the session should be initialized."""
    def __init__(
        self,
        *,
        instrument_resource_name: builtins.str = ...,
        protocol: global___Protocol.ValueType = ...,
        reset: builtins.bool = ...,
        register_map_path: builtins.str = ...,
        initialization_behavior: global___SessionInitializationBehavior.ValueType = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["initialization_behavior", b"initialization_behavior", "instrument_resource_name", b"instrument_resource_name", "protocol", b"protocol", "register_map_path", b"register_map_path", "reset", b"reset"]) -> None: ...

global___InitializeRequest = InitializeRequest

@typing.final
class InitializeResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SESSION_NAME_FIELD_NUMBER: builtins.int
    NEW_SESSION_FIELD_NUMBER: builtins.int
    session_name: builtins.str
    new_session: builtins.bool
    def __init__(
        self,
        *,
        session_name: builtins.str = ...,
        new_session: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["new_session", b"new_session", "session_name", b"session_name"]) -> None: ...

global___InitializeResponse = InitializeResponse

@typing.final
class WriteRegisterRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SESSION_NAME_FIELD_NUMBER: builtins.int
    REGISTER_NAME_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    session_name: builtins.str
    register_name: builtins.str
    value: builtins.int
    def __init__(
        self,
        *,
        session_name: builtins.str = ...,
        register_name: builtins.str = ...,
        value: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["register_name", b"register_name", "session_name", b"session_name", "value", b"value"]) -> None: ...

global___WriteRegisterRequest = WriteRegisterRequest

@typing.final
class ReadRegisterRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SESSION_NAME_FIELD_NUMBER: builtins.int
    REGISTER_NAME_FIELD_NUMBER: builtins.int
    session_name: builtins.str
    register_name: builtins.str
    def __init__(
        self,
        *,
        session_name: builtins.str = ...,
        register_name: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["register_name", b"register_name", "session_name", b"session_name"]) -> None: ...

global___ReadRegisterRequest = ReadRegisterRequest

@typing.final
class ReadRegisterResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VALUE_FIELD_NUMBER: builtins.int
    value: builtins.int
    def __init__(
        self,
        *,
        value: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["value", b"value"]) -> None: ...

global___ReadRegisterResponse = ReadRegisterResponse

@typing.final
class WriteGpioChannelRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SESSION_NAME_FIELD_NUMBER: builtins.int
    PORT_FIELD_NUMBER: builtins.int
    CHANNEL_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    session_name: builtins.str
    port: builtins.int
    channel: builtins.int
    state: builtins.bool
    def __init__(
        self,
        *,
        session_name: builtins.str = ...,
        port: builtins.int = ...,
        channel: builtins.int = ...,
        state: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["channel", b"channel", "port", b"port", "session_name", b"session_name", "state", b"state"]) -> None: ...

global___WriteGpioChannelRequest = WriteGpioChannelRequest

@typing.final
class ReadGpioChannelRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SESSION_NAME_FIELD_NUMBER: builtins.int
    PORT_FIELD_NUMBER: builtins.int
    CHANNEL_FIELD_NUMBER: builtins.int
    session_name: builtins.str
    port: builtins.int
    channel: builtins.int
    def __init__(
        self,
        *,
        session_name: builtins.str = ...,
        port: builtins.int = ...,
        channel: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["channel", b"channel", "port", b"port", "session_name", b"session_name"]) -> None: ...

global___ReadGpioChannelRequest = ReadGpioChannelRequest

@typing.final
class ReadGpioChannelResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATE_FIELD_NUMBER: builtins.int
    state: builtins.bool
    def __init__(
        self,
        *,
        state: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["state", b"state"]) -> None: ...

global___ReadGpioChannelResponse = ReadGpioChannelResponse

@typing.final
class WriteGpioPortRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SESSION_NAME_FIELD_NUMBER: builtins.int
    PORT_FIELD_NUMBER: builtins.int
    MASK_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    session_name: builtins.str
    port: builtins.int
    mask: builtins.int
    state: builtins.int
    def __init__(
        self,
        *,
        session_name: builtins.str = ...,
        port: builtins.int = ...,
        mask: builtins.int = ...,
        state: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["mask", b"mask", "port", b"port", "session_name", b"session_name", "state", b"state"]) -> None: ...

global___WriteGpioPortRequest = WriteGpioPortRequest

@typing.final
class ReadGpioPortRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SESSION_NAME_FIELD_NUMBER: builtins.int
    PORT_FIELD_NUMBER: builtins.int
    MASK_FIELD_NUMBER: builtins.int
    session_name: builtins.str
    port: builtins.int
    mask: builtins.int
    def __init__(
        self,
        *,
        session_name: builtins.str = ...,
        port: builtins.int = ...,
        mask: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["mask", b"mask", "port", b"port", "session_name", b"session_name"]) -> None: ...

global___ReadGpioPortRequest = ReadGpioPortRequest

@typing.final
class ReadGpioPortResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATE_FIELD_NUMBER: builtins.int
    state: builtins.int
    def __init__(
        self,
        *,
        state: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["state", b"state"]) -> None: ...

global___ReadGpioPortResponse = ReadGpioPortResponse

@typing.final
class CloseRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SESSION_NAME_FIELD_NUMBER: builtins.int
    session_name: builtins.str
    def __init__(
        self,
        *,
        session_name: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["session_name", b"session_name"]) -> None: ...

global___CloseRequest = CloseRequest

@typing.final
class StatusResponse(google.protobuf.message.Message):
    """Empty reponse for successful operations, whereas err messages are handled by gRPC objects."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___StatusResponse = StatusResponse
